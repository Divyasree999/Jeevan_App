package com.cg.terminsurancecustomer.repository;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;
import org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManager;
import org.springframework.test.context.junit4.SpringRunner;

import com.cg.jeevanonlineterminsurance.entity.Customer;
import com.cg.jeevanonlineterminsurance.repository.CustomerDaoImpl;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.assertj.core.api.Assertions.assertThat;

@RunWith(SpringRunner.class)
@DataJpaTest
public class CustomerDaoImplTest {
	@Autowired
	private CustomerDaoImpl customerDaoImpl;
	@Autowired
	private TestEntityManager testEntityManager;

	@Test
	public void testNewCustomer() throws Exception {
		Customer user = getCustomer();
		Customer saveInDb = testEntityManager.persist(user);
		Customer getInDb = customerDaoImpl.findById(user.getCustomerPolicyId()).get();
		assertThat(getInDb).isEqualTo(saveInDb);
	}

	private Customer getCustomer() {
		Customer user = new Customer();
		user.setCustomerId(10178278);
		user.setPolicyId(401273827);
		user.setCustomerName("Sanya");
		user.setEmail("sanya123@gmail.com");
		user.setMobileNo("7893436347");
		user.setAge(25);
		user.setDob("13-08-1996");
		return user;
	}

	@Test
	public void testGetCustomerById() throws Exception {
		Customer user = new Customer();
		user.setCustomerId(10178267);
		user.setPolicyId(401273851);
		user.setCustomerName("Suraj");
		user.setEmail("suraj7883@gmail.com");
		user.setMobileNo("7879101818");
		user.setAge(28);
		user.setDob("07-02-1993");
		Customer saveInDb = testEntityManager.persist(user);
		Customer getInDb = customerDaoImpl.findById(user.getCustomerPolicyId()).get();
		assertThat(getInDb).isEqualTo(saveInDb);
	}

	@Test
	public void testGetAllCustomers() throws Exception {
		Customer user1 = new Customer();
		user1.setCustomerId(10178263);
		user1.setPolicyId(401273823);
		user1.setCustomerName("Hema");
		user1.setEmail("hema26@gmail.com");
		user1.setMobileNo("7845326170");
		user1.setAge(27);
		user1.setDob("16-07-1993");
		Customer user2 = new Customer();
		user2.setCustomerId(10132263);
		user2.setPolicyId(411273823);
		user2.setCustomerName("Rajesh");
		user2.setEmail("rajesh1456@gmail.com");
		user2.setMobileNo("888324151");
		user2.setAge(35);
		user2.setDob("09-03-1986");
		Customer user3 = new Customer();
		user3.setCustomerId(12098254);
		user3.setPolicyId(34527672);
		user3.setCustomerName("Divya");
		user3.setEmail("divya453@gmail.com");
		user3.setMobileNo("8008321312");
		user3.setAge(21);
		user3.setDob("12-07-1999");
		Customer user4 = new Customer();
		user4.setCustomerId(12278263);
		user4.setPolicyId(42227382);
		user4.setCustomerName("Nanda");
		user4.setEmail("nanda26@gmail.com");
		user4.setMobileNo("6678326170");
		user4.setAge(27);
		user4.setDob("13-07-1993");
		Customer user5 = new Customer();
		user5.setCustomerId(10078263);
		user5.setPolicyId(40227382);
		user5.setCustomerName("Nandu");
		user5.setEmail("nandu26@gmail.com");
		user5.setMobileNo("6678326170");
		user5.setAge(27);
		user5.setDob("13-06-1993");
		testEntityManager.persist(user1);
		testEntityManager.persist(user2);
		testEntityManager.persist(user3);
		testEntityManager.persist(user4);
		testEntityManager.persist(user5);
		List<Customer> userList = (List<Customer>) customerDaoImpl.findAll();
		assertEquals(5, userList.size());

	}

	@Test
	public void testDeleteCustomerById() throws Exception {
		Customer user1 = new Customer();
		user1.setCustomerId(10178263);
		user1.setPolicyId(401273823);
		user1.setCustomerName("Hema");
		user1.setEmail("hema26@gmail.com");
		user1.setMobileNo("7845326170");
		user1.setAge(27);
		user1.setDob("16-07-1993");
		Customer user2 = new Customer();
		user2.setCustomerId(10789898);
		user2.setPolicyId(40211123);
		user2.setCustomerName("Varsha Singhania");
		user2.setEmail("varsha.singhania@gmail.com");
		user2.setMobileNo("8000067677");
		user2.setAge(22);
		user2.setDob("01-01-1998");
		Customer user3 = testEntityManager.persist(user1);
		testEntityManager.persist(user2);
		testEntityManager.remove(user3);
		List<Customer> users = (List<Customer>) customerDaoImpl.findAll();
		assertEquals(users.size(), 1);

	}

	@Test
	public void testUpdateCustomer() {
		Customer user = new Customer();
		user.setCustomerId(10878781);
		user.setPolicyId(40255512);
		user.setCustomerName("Sharad Malhotra");
		user.setEmail("malhotrasharad21@gmail.com");
		user.setMobileNo("8989891212");
		user.setAge(25);
		user.setDob("21-12-1995");
		testEntityManager.persist(user);
		Customer getFromDb = customerDaoImpl.findById(user.getCustomerPolicyId()).get();
		getFromDb.setMobileNo("7878212121");
		testEntityManager.persist(getFromDb);
		assertThat(getFromDb.getMobileNo()).isEqualTo("7878212121");
	}
}
